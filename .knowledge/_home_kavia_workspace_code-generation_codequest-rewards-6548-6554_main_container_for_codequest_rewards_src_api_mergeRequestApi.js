{"is_source_file": true, "format": "JavaScript", "description": "This file defines a module for interacting with merge request-related API endpoints, providing functions to retrieve merge requests, claim bugs, submit reviews, and add comments. It is currently mocked to simulate API calls without actual network requests.", "external_files": ["./apiClient"], "external_methods": [], "published": ["mergeRequestApi"], "classes": [], "methods": [{"name": "getMergeRequests", "description": "Fetches a list of merge requests with optional filters, currently stubbed with simulated data."}, {"name": "getMergeRequestById", "description": "Retrieves details for a specific merge request by its ID, currently simulated."}, {"name": "claimBug", "description": "Claims a bug in a merge request, returns simulated confirmation including points and XP."}, {"name": "submitReview", "description": "Submits a review for a merge request, currently simulated with success message."}, {"name": "addComment", "description": "Adds a comment to a merge request, currently simulated with success confirmation."}], "calls": ["console.log('API call: Get merge requests with filters:', filters)", "console.log('API call: Get merge request by ID', id)", "console.log('API call: Claim bug', { mergeRequestId, bugId })", "console.log('API call: Submit review', { mergeRequestId, reviewData })", "console.log('API call: Add comment', { mergeRequestId, commentData })"], "search-terms": ["mergeRequestApi", "API module for merge requests", "claimBug", "getMergeRequests", "submitReview", "addComment", "mocked API calls"], "state": 2, "file_id": 37, "knowledge_revision": 101, "git_revision": "aa2eeebd01bf5eae2e3be391b56292e1068c4891", "ctags": [{"_type": "tag", "name": "addComment", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/mergeRequestApi.js", "pattern": "/^  addComment: (mergeRequestId, commentData) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "claimBug", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/mergeRequestApi.js", "pattern": "/^  claimBug: (mergeRequestId, bugId) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "console", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/mergeRequestApi.js", "pattern": "/^    console.log('API call: Get merge requests with filters:', filters);$/", "language": "JavaScript", "kind": "field", "scope": "mergeRequestApi.getMergeRequests", "scopeKind": "class"}, {"_type": "tag", "name": "getMergeRequestById", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/mergeRequestApi.js", "pattern": "/^  getMergeRequestById: (id) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getMergeRequests", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/mergeRequestApi.js", "pattern": "/^  getMergeRequests: (filters = {}) => {$/", "language": "JavaScript", "kind": "property", "scope": "mergeRequestApi", "scopeKind": "class"}, {"_type": "tag", "name": "mergeRequestApi", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/mergeRequestApi.js", "pattern": "/^const mergeRequestApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "submitReview", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/mergeRequestApi.js", "pattern": "/^  submitReview: (mergeRequestId, reviewData) => {$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/mergeRequestApi.js", "hash": "a2c4c45babd180c326cb602b0f8cd1f6", "format-version": 4, "code-base-name": "default", "fields": [{"name": "console.log('API call: Get merge requests with filters:', filters);", "scope": "mergeRequestApi.getMergeRequests", "scopeKind": "class", "description": "unavailable"}, {"name": "getMergeRequests: (filters = {}) => {", "scope": "mergeRequestApi", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"101": "aa2eeebd01bf5eae2e3be391b56292e1068c4891"}]}
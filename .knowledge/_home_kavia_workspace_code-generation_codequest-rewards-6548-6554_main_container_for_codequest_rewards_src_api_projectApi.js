{"is_source_file": true, "format": "JavaScript", "description": "Source file defining a mocked API module for project-related endpoints, including functions to get, create, update projects, manage project teams, configure routing, and retrieve metrics.", "external_files": ["./apiClient"], "external_methods": [], "published": ["projectApi"], "classes": [], "methods": [{"name": "getProjects", "description": "Fetches a list of projects with optional filters, currently mocked to return an empty list."}, {"name": "getProjectById", "description": "Retrieves a specific project by its ID, simulated with a Promise resolving to null."}, {"name": "createProject", "description": "Creates a new project with provided data, returning a simulated success response including a generated project ID and timestamp."}, {"name": "updateProject", "description": "Updates an existing project based on project ID and update data, simulated to confirm success."}, {"name": "getProjectTeams", "description": "Retrieves teams associated with a project, mocked as an empty list."}, {"name": "configureRouting", "description": "Configures reviewer routing for a project, simulated to confirm success."}, {"name": "getProjectMetrics", "description": "Retrieves project performance metrics, with optional timeframe filters, mocked as an empty object."}], "calls": ["console.log('API call: Get projects with filters:', filters)", "console.log('API call: Get project by ID:', projectId)", "console.log('API call: Create project:', projectData)", "console.log('API call: Update project:', { projectId, updateData })", "console.log('API call: Get teams for project:', projectId)", "console.log('API call: Configure reviewer routing:', { projectId, routingRules })", "console.log('API call: Get project metrics:', { projectId, timeframe })"], "search-terms": ["projectApi", "API module", "project endpoints", "mocked API", "project management", "API calls", "JavaScript API"], "state": 2, "file_id": 60, "knowledge_revision": 166, "git_revision": "d6ba6f8490b5397c6b02c5ab1d70ba6006eb5405", "ctags": [{"_type": "tag", "name": "configureRouting", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "pattern": "/^  configureRouting: (projectId, routingRules) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "console", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "pattern": "/^    console.log('API call: Get projects with filters:', filters);$/", "language": "JavaScript", "kind": "field", "scope": "projectApi.getProjects", "scopeKind": "class"}, {"_type": "tag", "name": "createProject", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "pattern": "/^  createProject: (projectData) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getProjectById", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "pattern": "/^  getProjectById: (projectId) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getProjectMetrics", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "pattern": "/^  getProjectMetrics: (projectId, timeframe = {}) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getProjectTeams", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "pattern": "/^  getProjectTeams: (projectId) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getProjects", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "pattern": "/^  getProjects: (filters = {}) => {$/", "language": "JavaScript", "kind": "property", "scope": "projectApi", "scopeKind": "class"}, {"_type": "tag", "name": "projectApi", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "pattern": "/^const projectApi = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "updateProject", "path": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "pattern": "/^  updateProject: (projectId, updateData) => {$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/code-generation/codequest-rewards-6548-6554/main_container_for_codequest_rewards/src/api/projectApi.js", "hash": "290c1af31902731d05a84eaf2217badb", "format-version": 4, "code-base-name": "default", "fields": [{"name": "console.log('API call: Get projects with filters:', filters);", "scope": "projectApi.getProjects", "scopeKind": "class", "description": "unavailable"}, {"name": "getProjects: (filters = {}) => {", "scope": "projectApi", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"166": "d6ba6f8490b5397c6b02c5ab1d70ba6006eb5405"}]}